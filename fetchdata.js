/** * Helper function for POSTing data as JSON with fetch. * * @param {Object} options * @param {string} options.url - URL to POST data to * @param {FormData} options.formData - `FormData` instance * @return {Object} - Response body from URL that was POSTed to */async function postFormDataAsJson({ url, formData }) {	const plainFormData = Object.fromEntries(formData.entries());	const formDataJsonString = JSON.stringify(plainFormData);	const fetchOptions = {		method: "POST",		 mode: 'cors', // no-cors, *cors, same-origin                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached                //credentials: 'same-origin', // include, *same-origin, omit		headers: {			"Content-Type": "application/json",			"Access-Control-Allow-Headers": "*",			"Access-Control-Allow-Methods": "POST,GET",			"Access-Control-Allow-Origin": "*",			//Accept : "application/json",		},		  redirect: 'follow', // manual, *follow, error                 referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-  origin, strict-origin, strict-origin-when-cross-origin, unsafe-url		body: formData,	};	const response = await fetch(url, fetchOptions);	if (!response.ok) {		const errorMessage = await response.text();		throw new Error(errorMessage);	}	 return response.json();	}/** * Event handler for a form submit event. * * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit_event * * @param {SubmitEvent} event */async function handleFormSubmit(event) {	event.preventDefault();	const form = event.currentTarget;	const url = "http://localhost:3000/inputs";	try {		const formData = new FormData(form);		const responseData = await postFormDataAsJson({ url, formData });		console.log({ formData });			} catch (error) {		console.error(error);	}}const vswsForm = document.getElementById("vswsForm");vswsForm.addEventListener("submit", handleFormSubmit);